{"mappings":"MAAO,MAAMA,EAAgBC,IAC3BC,OAAOC,UAAUC,cAAc,CAC7BC,OAAQ,C,MAAEJ,GACVK,KAAMC,UACJ,MAAMC,EAAYC,SAASC,cAAc,iBAEzC,GAAIF,EAEF,YADAA,EAAUG,SAIZ,MAAMC,WAAEA,SAAqBV,OAAOW,QAAQC,MAAMC,IAAI,CAAC,eAEjDC,EAAa,qLAWbC,EAAM,GAAGD,IAAaJ,EAAa,8DAAgE,4DAEnGM,EAAYT,SAASU,cAAc,UACzCD,EAAUE,aAAa,QAAS,gBAChCF,EAAUE,aAAa,QAASH,GAEhC,IAAII,GAAa,EACjBH,EAAUI,iBAAiB,SAAUC,IACI,UAAnCA,EAAElB,OAAOmB,MAAMC,iBACjBJ,GAAa,EACbH,EAAUE,aAAa,QAAS,GAAGJ,8DAEnCK,GAAa,EACbH,EAAUE,aAAa,QAAS,GAAGJ,iEAGjCJ,IAAeS,EACjBnB,OAAOW,QAAQC,MAAMY,IAAI,CAAEd,YAAY,IAEvCV,OAAOW,QAAQC,MAAMY,IAAI,CAAEd,YAAY,OAI3CH,SAASkB,KAAKC,YAAYV,OAKnBW,EAAgB5B,IAC3BC,OAAOC,UAAUC,cAAc,CAC7BC,OAAQ,C,MAAEJ,GACVK,KAAM,KACJ,MAAMwB,EAAcrB,SAASC,cAAc,iBACvCoB,GACFA,EAAYnB,aCvDdoB,EAAe,CAAC9B,EAAO+B,KACvBA,EACF9B,OAAOW,QAAQC,MAAMY,IAAI,CAAEO,iBAAiB,IAAQ,KAClDjC,EAAaC,MAGfC,OAAOW,QAAQC,MAAMC,IAAI,CAAC,oBAAoB,EAACkB,gBAAEA,MAC3CA,EACFjC,EAAaC,GAEb4B,EAAa5B,OAORM,WACX,MAAMM,QAAgBX,OAAOW,QAAQC,MAAMC,IAAI,CAAC,aAAc,UAC9D,IAAImB,EAAQ,KACRC,EAAQtB,EAAQsB,OAAS,IACzBvB,EAAaC,EAAQD,WACrBwB,EAAa,KAEjBlC,OAAOmC,KAAKC,YAAYC,aAAY,EAACtC,MAAEA,MACrCmC,EAAanC,EACb8B,EAAa9B,MAGfC,OAAOmC,KAAKG,UAAUD,aAAatC,IACjCmC,EAAanC,EACb8B,EAAa9B,MAGfC,OAAOuC,SAASC,UAAUH,aAAaI,IACrCZ,EAAaK,EAAYO,MAG3B,MAAMC,EAAW,KACXhC,GAAcuB,IAAUD,EAC1BA,EAAQW,aAAY,KAClB3C,OAAOmC,KAAKS,WACXX,IAEHY,cAAcb,GACdA,EAAQ,OAKZhC,OAAOW,QAAQmC,UAAUT,aAAaU,IAChCA,EAAQrC,YAAcqC,EAAQrC,WAAWsC,WAAatC,IACxDA,EAAaqC,EAAQrC,WAAWsC,UAG9BD,EAAQd,OAASc,EAAQd,MAAMe,WAAaf,IAC9CA,EAAQc,EAAQd,MAAMe,UAGxBN,OAGFA,KAGFO,I","sources":["button.js","background.js"],"sourcesContent":["export const createButton = (tabId) => {\n  chrome.scripting.executeScript({\n    target: { tabId },\n    func: async () => {\n      const oldButton = document.querySelector('.fixed-button');\n\n      if (oldButton) {\n        oldButton.remove()\n        return;\n      }\n\n      const { timerStart } = await chrome.storage.local.get(['timerStart'])\n\n      const defaultCSS = `\n      top: 50vh;\n      left: 95vw;\n      z-index: 999;\n      border: none;\n      position:fixed;\n      width: 40px;\n      height: 40px;\n      border-radius: 50%;\n      `\n\n      const bgc = `${defaultCSS}${timerStart ? 'background-color: green;box-shadow: 0px 0px 10px 4px green;' : 'background-color: red;box-shadow: 0px 0px 10px 4px red;'}`\n\n      const newButton = document.createElement('button');\n      newButton.setAttribute('class', 'fixed-button');\n      newButton.setAttribute('style', bgc);\n      \n      let localStart = false\n      newButton.addEventListener('click', (e) => {\n        if (e.target.style.backgroundColor === 'green') {\n          localStart = false\n          newButton.setAttribute('style', `${defaultCSS}background-color: red;box-shadow: 0px 0px 10px 4px red;`)\n        } else {\n          localStart = true\n          newButton.setAttribute('style', `${defaultCSS}background-color: green;box-shadow: 0px 0px 10px 4px green;`)\n        }\n\n        if (timerStart || !localStart) {\n          chrome.storage.local.set({ timerStart: false })\n        } else {\n          chrome.storage.local.set({ timerStart: true })\n        }\n      })\n\n      document.body.appendChild(newButton);\n    },\n  })\n}\n\nexport const removeButton = (tabId) => {\n  chrome.scripting.executeScript({\n    target: { tabId },\n    func: () => {\n      const fixedButton = document.querySelector('.fixed-button')\n      if (fixedButton) {\n        fixedButton.remove()\n      }\n    }\n  })\n}","'use strict';\nimport { createButton, removeButton } from './button.js'\n\nconst reloadWindow = (tabId, cmd) => {\n  if (cmd) {\n    chrome.storage.local.set({ showStartButton: true }, () => {\n      createButton(tabId)\n    })\n  } else {\n    chrome.storage.local.get(['showStartButton'], ({ showStartButton }) => {\n      if (showStartButton) {\n        createButton(tabId)\n      } else {\n        removeButton(tabId)\n      }\n    })\n  }\n}\n\n\nconst init = async () => {\n  const storage = await chrome.storage.local.get(['timerStart', 'delay'])\n  let timer = null\n  let delay = storage.delay || 30000\n  let timerStart = storage.timerStart\n  let localTabId = null\n\n  chrome.tabs.onActivated.addListener(({ tabId }) => {\n    localTabId = tabId\n    reloadWindow(tabId)\n  })\n\n  chrome.tabs.onUpdated.addListener((tabId) => {\n    localTabId = tabId\n    reloadWindow(tabId)\n  })\n\n  chrome.commands.onCommand.addListener((command) => {\n    reloadWindow(localTabId, command)\n  })\n\n  const timerRun = () => {\n    if (timerStart && delay && !timer) {\n      timer = setInterval(() => {\n        chrome.tabs.reload()\n      }, delay)\n    } else {\n      clearInterval(timer)\n      timer = null\n    }  \n  }\n\n\n  chrome.storage.onChanged.addListener((changes) => {\n    if (changes.timerStart && changes.timerStart.newValue !== timerStart) {\n      timerStart = changes.timerStart.newValue\n    }\n\n    if (changes.delay && changes.delay.newValue !== delay) {\n      delay = changes.delay.newValue\n    }\n\n    timerRun()\n  })\n\n  timerRun()\n}\n\ninit();"],"names":["$16c174f4ed274692$export$9b6d6ca62970729f","tabId","chrome","scripting","executeScript","target","func","async","oldButton","document","querySelector","remove","timerStart","storage","local","get","defaultCSS","bgc","newButton","createElement","setAttribute","localStart","addEventListener","e","style","backgroundColor","set","body","appendChild","$16c174f4ed274692$export$8d776830dbcce823","fixedButton","$9c47cd85506b960a$var$reloadWindow","cmd","showStartButton","timer","delay","localTabId","tabs","onActivated","addListener","onUpdated","commands","onCommand","command","timerRun","setInterval","reload","clearInterval","onChanged","changes","newValue","$9c47cd85506b960a$var$init"],"version":3,"file":"background.js.map"}