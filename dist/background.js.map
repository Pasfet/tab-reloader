{"mappings":"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","sources":["button.js","storage.js","tabs.js","timer.js","background.js"],"sourcesContent":["'use strict'\n\nexport class Button {\n  scripting = null\n  tabId = null\n\n  btnStyle = `\n    top: 50vh;\n    left: 95vw;\n    z-index: 999;\n    border: none;\n    position:fixed;\n    width: 40px;\n    height: 40px;\n    border-radius: 50%;\n  `\n\n  constructor(tabId) {\n    this.scripting = chrome.scripting\n    this.tabId = tabId\n  }\n\n  create(timerStart) {\n    this.scripting.executeScript({\n      target: { tabId: this.tabId },\n      func: (timerStart, btnStyle) => {\n        const existingButton = document.getElementById('actions-button')\n\n        if (existingButton) {\n          return;\n        } else {\n          const bgColor = timerStart ? 'green' : 'red'\n          const style = `${btnStyle}background-color: ${bgColor};box-shadow: 0px 0px 10px 4px ${bgColor};`\n          const createdButton = document.createElement('button')\n\n          createdButton.setAttribute('id', 'actions-button')\n          createdButton.setAttribute('style', style)\n          createdButton.setAttribute('data-start', timerStart)\n\n          createdButton.addEventListener('click', async () => {\n            if (createdButton.dataset.start === 'true') {\n              createdButton.style.backgroundColor = 'red'\n              createdButton.style.boxShadow = '0px 0px 10px 4px red'\n              createdButton.dataset.start = 'false'\n              await chrome.storage.local.set({ timerStart: false })\n            } else {\n              createdButton.style.backgroundColor = 'green'\n              createdButton.style.boxShadow = '0px 0px 10px 4px green'\n              createdButton.dataset.start = 'true'\n              await chrome.storage.local.set({ timerStart: true })\n            }\n          })\n\n          document.body.appendChild(createdButton)\n        }\n      },\n      args: [timerStart, this.btnStyle]\n    })\n  }\n\n  remove() {\n    this.scripting.executeScript({\n      target: { tabId: this.tabId },\n      func: () => {\n        const button = document.getElementById('actions-button')\n\n        if (button) {\n          button.remove()\n        }\n      },\n    })\n  }\n}","export class ChromeStorage {\n  storage = null\n  constructor() {\n    this.storage = chrome.storage;\n  }\n\n  async set(payload) {\n    await this.storage.local.set(payload)\n  }\n\n  get(keys) {\n    return this.storage.local.get(keys)\n  }\n\n  changed(cb) {\n    this.storage.onChanged.addListener(cb)\n  }\n}","export class ChromeTabs {\n  tabs = null\n\n  constructor() {\n    this.tabs = chrome.tabs\n  }\n\n  onEventsTab(event, cb) {\n    return this.tabs[event].addListener(cb)\n  }\n\n  reload() {\n    this.tabs.reload()\n  }\n\n  async getCurrentTab() {\n    const [tab] = await this.tabs.query({ currentWindow: true, active : true })\n    return tab.id\n  }\n}","export class TimerReload {\n  timer = null\n  delay = 30000\n  storage = null\n\n  constructor(storage) {\n    this.storage = storage\n    this.setDelay()\n  }\n\n  get timer() {\n    return this.timer\n  }\n\n  async setDelay(val) {\n    if (val) {\n      this.delay = val\n    } else {\n      const { delay } = await this.storage.get(['delay'])\n      console.log(delay, 'delay')\n      this.delay = delay ?? 30000\n    }\n  }\n\n  timerRun(cb) {\n    if (!this.timer) {\n      this.timer = setInterval(cb, this.delay)\n    }\n  }\n\n  async timerStop() {\n    clearInterval(this.timer)\n    this.timer = null\n    await this.storage.set({ timerStart: false })\n  }\n}","'use strict';\n\nimport { Button } from './button';\nimport { ChromeStorage } from './storage'\nimport { ChromeTabs } from './tabs';\nimport { TimerReload } from \"./timer\";\n\nconst init = () => {\n  const storage = new ChromeStorage()\n  const timer = new TimerReload(storage)\n  const tabs = new ChromeTabs()\n\n  const timerRun = () => {\n    timer.timerRun(() => {\n      tabs.reload()\n    })\n  }\n\n  const initButton = async (tabId) => {\n    const button = new Button(tabId)\n    const { showStartButton, timerStart } = await storage.get(['showStartButton', 'timerStart'])\n\n    if (showStartButton) {\n      button.create(timerStart)\n    } else {\n      button.remove()\n    }\n\n    if (timerStart && timer.timer === null) {\n      timerRun()\n    }\n  }\n\n  tabs.onEventsTab('onUpdated', (tabId) => {\n    initButton(tabId)\n  })\n\n  tabs.onEventsTab('onActivated', ({ tabId }) => {\n    initButton(tabId)\n  })\n\n  storage.changed(async changes => {\n    if (changes.timerStart) {\n      if (changes.timerStart.newValue) {\n        await storage.set({ timerStart: true })\n        timerRun()\n      } else {\n        await storage.set({ timerStart: false })\n        await timer.timerStop()\n      }\n    }\n\n    if (changes.delay) {\n      await timer.timerStop()\n\n      if (changes.delay.newValue) {\n        await timer.setDelay()\n        await storage.set({ delay: changes.delay.newValue })\n      }\n    }\n  })\n}\n\ninit()"],"names":["$16c174f4ed274692$export$353f5b6fc5456de1","scripting","tabId","btnStyle","constructor","this","chrome","create","timerStart1","executeScript","target","func","timerStart","document","getElementById","bgColor","style","createdButton","createElement","setAttribute","addEventListener","async","dataset","start","backgroundColor","boxShadow","storage","local","set","body","appendChild","args","remove","button","$f3e8f2b7b2b2b246$export$842b4516e1b4dcd5","payload","get","keys","changed","cb","onChanged","addListener","$a8a5c274133a9e11$export$9e1f98368c87ec92","tabs","onEventsTab","event","reload","tab","query","currentWindow","active","id","$c4a014e9d4fd6ace$export$9cb12ea9c2362d54","timer","delay","setDelay","val","console","log","timerRun","setInterval","clearInterval","initButton","showStartButton","changes","newValue","timerStop","$9c47cd85506b960a$var$init"],"version":3,"file":"background.js.map"}